version: '3'

networks:
  local:
    driver: bridge
  public:
    driver: bridge

services:

  # api:
  #   build:
  #     context: ./api
  #   stdin_open: true
  #   tty: true
  #   ports:
  #     - 8081:8081
  #   networks:
  #     public:
  #       aliases:
  #         - api_public
  #     local:
  #       aliases:
  #         - api_local
  #   depends_on:
  #     - jaeger-allinone
  #     - db
  #     # - jaeger-collector
  #     # - jaeger-agent
  #     # - jaeger-query

  client:
    build:
      context: ./client
    stdin_open: true
    tty: true
    ports:
      - 8080:8080
    environment:
      - JAEGER_AGENT_HOST=allinone
      - JAEGER_AGENT_PORT=6831
    depends_on:
      # - factorial
      - jaeger-allinone
      # - api
      # - db
      # - jaeger-collector
      # - jaeger-agent
      # - jaeger-query
    networks:
      public:
        aliases:
          - client
    restart: always

  # service1:
  #   build: java/java_svc/
  #   image: spring_jaeger:latest
  #   ports:
  #     - "8081:8080"
  #   networks:
  #     public:
  #       aliases:
  #         - service1

  factorial:
    build:
      context: ./factorial
    stdin_open: true
    tty: true
    ports:
      - 8088:8088
    depends_on:
      # - factorial
      - jaeger-allinone
      # - api
      # - db
      # - jaeger-collector
      # - jaeger-agent
      # - jaeger-query
    networks:
      public:
        aliases:
          - factorial_als
    restart: always

  jaeger-allinone:
    image: jaegertracing/all-in-one:latest
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14250:14250"
    networks:
      public:
        aliases:
          - allinone

  my-test:
    container_name: application
    build:
      context: java/my-test
      dockerfile: Dockerfile
    image: application:latest
    ports:
      - 8082:8080
      - 8000:8000
    networks:
      public:
        aliases:
          - java_als

  java2:
    container_name: application2
    build:
      context: java/java2
      dockerfile: Dockerfile
    image: application2:latest
    ports:
      # - 8082:8080
      - 8001:8000
    networks:
      public:
        aliases:
          - java2_als

  # db:
  #   image: mysql:8.0
  #   environment:
  #     MYSQL_ROOT_PASSWORD: root
  #     MYSQL_DATABASE: go_database
  #     MYSQL_USER: go_test
  #     MYSQL_PASSWORD: password
  #     # TZ: 'Asia/Tokyo'
  #   # command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci
  #   # volumes:
  #   #   - db-data:/var/lib/mysql
  #   #   - ./db/my.cnf:/etc/mysql/conf.d/my.cnf
  #   restart: always                                         # if error, restart
  #   networks:
  #     - local

